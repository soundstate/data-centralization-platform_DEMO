version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: data-centralization-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: data_centralization
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d data_centralization"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - data-network

  redis:
    image: redis:7-alpine
    container_name: data-centralization-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - data-network

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: data-centralization-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - data-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  data-network:
    driver: bridge
